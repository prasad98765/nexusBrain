# # services:
# #   db:
# #     image: postgres:16
# #     restart: always
# #     environment:
# #       POSTGRES_USER: prasad
# #       POSTGRES_PASSWORD: YourStrongPass123!
# #       POSTGRES_DB: nexusdb
# #     ports:
# #       - "5433:5432"
# #     volumes:
# #       - postgres_data:/var/lib/postgresql/data

# #   web:
# #     build: .
# #     command: python run.py
# #     volumes:
# #       - .:/app
# #     ports:
# #       - "5433:5432"
# #     environment:
# #       - DATABASE_URL=postgresql+psycopg://sonar:sonar123@43.204.3.223:5432/postgres
# #     depends_on:
# #       - db

# #   pgadmin:
# #     image: dpage/pgadmin4
# #     restart: always
# #     environment:
# #       PGADMIN_DEFAULT_EMAIL: admin@admin.com
# #       PGADMIN_DEFAULT_PASSWORD: admin
# #     ports:
# #       - "5050:80"
# #     depends_on:
# #       - db
# #     volumes:
# #       - pgadmin_data:/var/lib/pgadmin

# # volumes:
# #   postgres_data:
# #   pgadmin_data:   # ‚úÖ Add this line


# # # to run docker compose up --build

# # services:
# #   web:
# #     build: .
# #     command: python run.py
# #     volumes:
# #       - .:/app
# #     ports:
# #       - "5001:5000"

# #   pgadmin:
# #     image: dpage/pgadmin4
# #     restart: always
# #     environment:
# #       PGADMIN_DEFAULT_EMAIL: admin@admin.com
# #       PGADMIN_DEFAULT_PASSWORD: admin
# #     ports:
# #       - "5050:80"
# #     volumes:
# #       - pgadmin_data:/var/lib/pgadmin

# # volumes:
# #   pgadmin_data:



# version: "3.9"

# services:
#   # ------------------------------
#   # üêç Flask Backend
#   # ------------------------------
#   web:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     container_name: backend
#     command: python run.py
#     volumes:
#       - ./backend:/app
#     ports:
#       - "5001:5000"
#     environment:
#       - FLASK_ENV=development
#       - PYTHONUNBUFFERED=1
#     # depends_on:
#     #   - pgadmin
#     # Uncomment below if backend needs PostgreSQL
#     # - db

#   # ------------------------------
#   # üåê Frontend (Node + NPM)
#   # ------------------------------
#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     container_name: frontend
#     command: npm run dev
#     ports:
#       - "5173:5173"
#     volumes:
#       - ./frontend:/app
#       - /app/node_modules
#     environment:
#       - NODE_ENV=development
#     # depends_on:
#     #   - web

#   # # ------------------------------
#   # # üêò pgAdmin (Database GUI)
#   # # ------------------------------
#   # pgadmin:
#   #   image: dpage/pgadmin4
#   #   container_name: pgadmin
#   #   restart: always
#   #   environment:
#   #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
#   #     PGADMIN_DEFAULT_PASSWORD: admin
#   #   ports:
#   #     - "5050:80"
#   #   volumes:
#   #     - pgadmin_data:/var/lib/pgadmin

# # ------------------------------
# # Volumes
# # ------------------------------
# # volumes:
# #   pgadmin_data:


version: "3.9"

services:
  # ----------------------------------
  # üêç Backend (Flask / FastAPI / etc.)
  # ----------------------------------
  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: backend
    # command: python app.py  # Removed - using Dockerfile CMD instead
    working_dir: /app
    volumes:
      - ./server:/app
    env_file:
      - .env
    ports:
      - "5001:5000"   # host:container
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+psycopg2://sonar:sonar123@43.204.3.223:5432/postgres
      # Example for database if needed:
      # - DATABASE_URL=postgresql+psycopg://prasad:YourStrongPass123!@db:5432/nexusdb
    depends_on:
      - client
      # Uncomment below if you add PostgreSQL:
      # - db

  # ----------------------------------
  # üåê Frontend (React / Vite / Next)
  # ----------------------------------
  client:
    build:
      context: .                 # üëà build from root, not ./client
      dockerfile: ./client/Dockerfile
    container_name: frontend
    command: npm run dev -- --host 0.0.0.0
    working_dir: /app/client     # üëà set correct working dir
    volumes:
      - .:/app                   # mount entire repo
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development


  # ----------------------------------
  # üêò PostgreSQL (Optional)
  # ----------------------------------
  # db:
  #   image: postgres:15-alpine
  #   container_name: postgres_db
  #   environment:
  #     POSTGRES_USER: prasad
  #     POSTGRES_PASSWORD: YourStrongPass123!
  #     POSTGRES_DB: nexusdb
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  # ----------------------------------
  # üß≠ pgAdmin (Optional)
  # ----------------------------------
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     - db
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin

# ----------------------------------
# Persistent Volumes (Optional)
# ----------------------------------
volumes:
  postgres_data:
